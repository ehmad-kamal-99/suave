// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ehmad-kamal-99/suave/gen/models"
)

// GetUsernameOKCode is the HTTP code returned for type GetUsernameOK
const GetUsernameOKCode int = 200

/*GetUsernameOK user retrieved

swagger:response getUsernameOK
*/
type GetUsernameOK struct {

	/*
	  In: Body
	*/
	Payload *models.Availability `json:"body,omitempty"`
}

// NewGetUsernameOK creates GetUsernameOK with default headers values
func NewGetUsernameOK() *GetUsernameOK {

	return &GetUsernameOK{}
}

// WithPayload adds the payload to the get username o k response
func (o *GetUsernameOK) WithPayload(payload *models.Availability) *GetUsernameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get username o k response
func (o *GetUsernameOK) SetPayload(payload *models.Availability) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsernameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUsernameInternalServerErrorCode is the HTTP code returned for type GetUsernameInternalServerError
const GetUsernameInternalServerErrorCode int = 500

/*GetUsernameInternalServerError internal server error

swagger:response getUsernameInternalServerError
*/
type GetUsernameInternalServerError struct {
}

// NewGetUsernameInternalServerError creates GetUsernameInternalServerError with default headers values
func NewGetUsernameInternalServerError() *GetUsernameInternalServerError {

	return &GetUsernameInternalServerError{}
}

// WriteResponse to the client
func (o *GetUsernameInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
